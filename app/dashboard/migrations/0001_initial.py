# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2018-02-12 02:29
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Measurements',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('value', models.FloatField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('time', models.DateField(blank=True, null=True)),
                ('timezone_offset', models.IntegerField(blank=True, null=True)),
                ('milliseconds', models.IntegerField(blank=True, null=True)),
                ('measured_value', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'measurements',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateField(blank=True, null=True)),
                ('updated_at', models.DateField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('photo_file_name', models.CharField(blank=True, max_length=40, null=True)),
                ('photo_content_type', models.CharField(blank=True, max_length=40, null=True)),
                ('photo_file_size', models.IntegerField(blank=True, null=True)),
                ('photo_updated_at', models.DateField(blank=True, null=True)),
                ('number', models.IntegerField(blank=True, null=True)),
                ('photo', models.TextField(blank=True, null=True)),
                ('photo_thumbnail', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'notes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sessions',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateField(blank=True, null=True)),
                ('updated_at', models.DateField(blank=True, null=True)),
                ('uuid', models.CharField(blank=True, max_length=40, null=True)),
                ('url_token', models.CharField(blank=True, max_length=40, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('calibration', models.IntegerField(blank=True, null=True)),
                ('contribute', models.IntegerField(blank=True, null=True)),
                ('data_type', models.CharField(blank=True, max_length=40, null=True)),
                ('instrument', models.CharField(blank=True, max_length=40, null=True)),
                ('phone_model', models.CharField(blank=True, max_length=40, null=True)),
                ('os_version', models.CharField(blank=True, max_length=40, null=True)),
                ('offset_60_db', models.CharField(blank=True, max_length=40, null=True)),
                ('start_time', models.DateField(blank=True, null=True)),
                ('end_time', models.DateField(blank=True, null=True)),
                ('measurements_count', models.IntegerField(blank=True, null=True)),
                ('timezone_offset', models.IntegerField(blank=True, null=True)),
                ('start_time_local', models.DateField(blank=True, null=True)),
                ('end_time_local', models.DateField(blank=True, null=True)),
                ('type', models.CharField(max_length=40)),
                ('is_indoor', models.IntegerField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('last_measurement_at', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sessions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Streams',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('sensor_name', models.CharField(blank=True, max_length=40, null=True)),
                ('unit_name', models.CharField(blank=True, max_length=40, null=True)),
                ('measurement_type', models.CharField(blank=True, max_length=40, null=True)),
                ('measurement_short_type', models.CharField(blank=True, max_length=40, null=True)),
                ('unit_symbol', models.CharField(blank=True, max_length=40, null=True)),
                ('threshold_very_low', models.IntegerField(blank=True, null=True)),
                ('threshold_low', models.IntegerField(blank=True, null=True)),
                ('threshold_medium', models.IntegerField(blank=True, null=True)),
                ('threshold_high', models.IntegerField(blank=True, null=True)),
                ('threshold_very_high', models.IntegerField(blank=True, null=True)),
                ('sensor_package_name', models.CharField(max_length=40)),
                ('measurements_count', models.IntegerField()),
                ('min_latitude', models.FloatField(blank=True, null=True)),
                ('max_latitude', models.FloatField(blank=True, null=True)),
                ('min_longitude', models.FloatField(blank=True, null=True)),
                ('max_longitude', models.FloatField(blank=True, null=True)),
                ('average_value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'streams',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.IntegerField(blank=True, null=True)),
                ('username', models.CharField(max_length=40, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
    ]
